\input texinfo   @c -*-texinfo-*-
@setfilename build-all.info

@comment ===============================================================
@comment WARNING: Do NOT edit this file.  It was produced automatically
@comment by man2info on Fri Jul 11 06:11:47 MDT 2003
@comment for beebe@psi.math.utah.edu
@comment from build-all.man
@comment in /u/sy/beebe/xml/shbook/man
@comment ===============================================================

@comment @documentencoding ISO-8859-1

@comment troff -man typesetting style: headers, footers, no paragraph indentation

@paragraphindent none

@iftex
@parskip = 0.5@normalbaselineskip plus 3pt minus 1pt
@end iftex

@set lq ``
@set rq ''

@comment  ========================================================
@comment TROFF INPUT: .TH BUILD-ALL 1 "" "1.00"

@headings off
@everyheading BUILD-ALL(1) @| @| BUILD-ALL(1)
@everyfooting  @| @thispage @| 1.00

@node Top

@chapter BUILD-ALL 1 "" "1.00
@c DEBUG: print_menu("Top")

@ifnottex
@menu
* NAME::
* SYNOPSIS::
* OPTIONS::
* DESCRIPTION::
* FILES::
* EXAMPLES::
* SEE ALSO::

@end menu
@end ifnottex


@comment  ========================================================
@comment TROFF INPUT: .SH NAME

@node NAME

@section NAME
@c DEBUG: print_menu("NAME")

build-all @r{---} build software distributions on remote systems in parallel
@comment  ========================================================
@comment TROFF INPUT: .SH SYNOPSIS

@node SYNOPSIS

@section SYNOPSIS
@c DEBUG: print_menu("SYNOPSIS")

@comment TROFF INPUT: .B build-all
@b{build-all}
[
@comment TROFF INPUT: .B \-\-?
@b{@minus{}@minus{}?}
]
[
@comment TROFF INPUT: .BI \-\-all " target(s)"
@b{@minus{}@minus{}all}@i{ target(s)}
]
[
@comment TROFF INPUT: .BI \-\-check " target(s)"
@b{@minus{}@minus{}check}@i{ target(s)}
]
@comment TROFF INPUT: .if n .ti +10n
@comment .if n .ti +10n
[
@comment TROFF INPUT: .BI \-\-configure " options"
@b{@minus{}@minus{}configure}@i{ options}
]
[
@comment TROFF INPUT: .B \-\-help
@b{@minus{}@minus{}help}
]
@comment TROFF INPUT: .if n .ti +10n
@comment .if n .ti +10n
@comment TROFF INPUT: .if t .ti +\w'\fBbuild-all\fP\ 'u
@comment .if t .ti +\w'@b{build-all}@tie{}'u
[
@comment TROFF INPUT: .BI \-\-logdirectory " dir"
@b{@minus{}@minus{}logdirectory}@i{ dir}
]
@comment TROFF INPUT: .if n .ti +10n
@comment .if n .ti +10n
[
@comment TROFF INPUT: .BI \-\-on " [user@]host[:dir][,envfile] .\|.\|."
@b{@minus{}@minus{}on}@i{ [user@@]host[:dir][,envfile] @dots{}}
]
@comment TROFF INPUT: .if n .ti +10n
@comment .if n .ti +10n
[
@comment TROFF INPUT: .BI \-\-source " dir(s)"
@b{@minus{}@minus{}source}@i{ dir(s)}
]
@comment TROFF INPUT: .if t .ti +\w'\fBbuild-all\fP\ 'u
@comment .if t .ti +\w'@b{build-all}@tie{}'u
[
@comment TROFF INPUT: .BI \-\-userhosts " file(s)"
@b{@minus{}@minus{}userhosts}@i{ file(s)}
]
@comment TROFF INPUT: .if n .ti +10n
@comment .if n .ti +10n
[
@comment TROFF INPUT: .B \-\-version
@b{@minus{}@minus{}version}
]
package(s)
@comment  ========================================================
@comment TROFF INPUT: .SH OPTIONS

@node OPTIONS

@section OPTIONS
@c DEBUG: print_menu("OPTIONS")

@comment TROFF INPUT: .B build-all
@b{build-all}
options can be prefixed with either one or two hyphens, and
can be abbreviated to any unique prefix.  Thus,
@comment TROFF INPUT: .BR \-v ,
@b{@minus{}v}@r{,}
@comment TROFF INPUT: .BR \-ver ,
@b{@minus{}ver}@r{,}
and
@comment TROFF INPUT: .B \-\-version
@b{@minus{}@minus{}version}
are equivalent.
@comment TROFF INPUT: .PP

To avoid confusion with options, if a filename begins with a
hyphen, it must be disguised by a leading absolute or
relative directory path, e.g.,
@comment TROFF INPUT: .I /tmp/-foo
@i{/tmp/-foo}
or
@comment TROFF INPUT: .IR ./-foo .
@i{./-foo}@r{.}
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP \w'\fB\-configure\fP\ \fIoptions\fP'u+3n
@comment TROFF INPUT: .BI \-\-all " target(s)"

@c ---------------------------------------------------------------------
@table @code
@item @b{@minus{}@minus{}all}@i{ target(s)}
Specify the default
@comment TROFF INPUT: .BR make (1)
@b{make}@r{(1)}
targets to build the package [default: empty].
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-\-?

@item @b{@minus{}@minus{}?}
Same as
@comment TROFF INPUT: .BR \-\-help .
@b{@minus{}@minus{}help}@r{.}
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-check " target(s)"

@item @b{@minus{}@minus{}check}@i{ target(s)}
Specify the default
@comment TROFF INPUT: .BR make (1)
@b{make}@r{(1)}
targets to test the package [default:
@comment TROFF INPUT: .IR check ].
@i{check}@r{].}
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-configure " options"

@item @b{@minus{}@minus{}configure}@i{ options}
Specify any options needed by the
@comment TROFF INPUT: .BR configure (1)
@b{configure}@r{(1)}
script.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-\-help

@item @b{@minus{}@minus{}help}
Display a brief help message on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
giving a usage description, and then terminate immediately
with a success return code.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-logdirectory " dir"

@item @b{@minus{}@minus{}logdirectory}@i{ dir}
Specify an alternate log file directory.  By default, logs
are created in a subdirectory named
@comment TROFF INPUT: .I logs/package-x.y.z
@i{logs/package-x.y.z}
for package
@comment TROFF INPUT: .I package-x.y.z
@i{package-x.y.z}
in the directory in which the package archive is found.  If
the directory cannot be created or written to, a default log
directory is chosen and reported.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-on " [user@]host[:dir][,envfile] .\|.\|."

@item @b{@minus{}@minus{}on}@i{ [user@@]host[:dir][,envfile] @dots{}}
Specify an alternate list of hosts on which to build the
packages.  The list must be quoted if it contains spaces or
other shell metacharacters.  This option suppresses reading
the host list from the
@comment TROFF INPUT: .I $HOME/.build/userhosts
@i{$HOME/.build/userhosts}
initialization file, allowing builds to be restricted to
a particular set of hosts.
@comment TROFF INPUT: .IP

In each host specification, the username may be omitted if
it is the same as on the current host.  The hostname is
mandatory.  The directory in which packages are unbundled
and built is given by
@comment TROFF INPUT: .IR dir :
@i{dir}@r{:}
a default directory is chosen and reported if that value is
omitted.  The optional environment file,
@comment TROFF INPUT: .IR envfile ,
@i{envfile}@r{,}
on the initiating host
@comment TROFF INPUT: .RI ( not
@r{(}@i{not}
the remote host), provides settings of environment variables
for
@comment TROFF INPUT: .BR configure (1),
@b{configure}@r{(1),}
in the form of
@comment TROFF INPUT: .I key=value
@i{key=value}
assignments.
@comment TROFF INPUT: .IP

This option may be given any number of times.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-source " dir(s)"

@item @b{@minus{}@minus{}source}@i{ dir(s)}
Specify an additional list of directories to search for
source archives.  The list must be quoted if it contains
spaces or other shell metacharacters.  That list will be
searched before the directories in the
@comment TROFF INPUT: .I $HOME/.build/directories
@i{$HOME/.build/directories}
list, or the built-in list.
@comment TROFF INPUT: .IP

This option may be given any number of times.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .BI \-\-userhosts " file(s)"

@item @b{@minus{}@minus{}userhosts}@i{ file(s)}
Specify an alternate list of userhosts files to replace the
default initialization file,
@comment TROFF INPUT: .IR $HOME/.build/userhosts .
@i{$HOME/.build/userhosts}@r{.}
The list must be quoted if it contains spaces or other shell
metacharacters.
@comment TROFF INPUT: .IP

If a specified userhosts file is not readable as given, it
is looked for in
@comment TROFF INPUT: .IR $HOME/.build ,
@i{$HOME/.build}@r{,}
@comment TROFF INPUT: .IP

This option may be given any number of times.
@comment TROFF INPUT: .IP

Settings from the
@comment TROFF INPUT: .B \-\-on
@b{@minus{}@minus{}on}
option override this option, so the two should be considered
mutually exclusive.
@comment TROFF INPUT: .IP

This option makes it convenient to create sets of build
hosts grouped by compiler, platform, or package, to
accommodate packages that are known to build only in certain
limited environments.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-\-version

@item @b{@minus{}@minus{}version}
Display the program version number and release date on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
and then terminate immediately with a success return code.
@comment  ========================================================
@comment TROFF INPUT: .SH DESCRIPTION

@end table

@c ---------------------------------------------------------------------

@node DESCRIPTION

@section DESCRIPTION
@c DEBUG: print_menu("DESCRIPTION")

@comment TROFF INPUT: .B build-all
@b{build-all}
provides for automated software builds on one or more
hosts, in parallel, with build logs collected in
package-specific directories on the initiating host, using
the secure shell to communicate with the remote hosts.
@comment TROFF INPUT: .PP

The log directory is always reported on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
and in an email message.
@comment TROFF INPUT: .PP

Log files are named with the package name, version, build
host, and an ISO 8601:2000 odometer-style time stamp, like
this:
@comment TROFF INPUT: .IR package-x.y.z.hostname.yyyy.mm.dd.hh.mm.ss.log .
@i{package-x.y.z.hostname.yyyy.mm.dd.hh.mm.ss.log}@r{.}
@comment TROFF INPUT: .PP

Packages should conform to GNU conventions for
software packaging: an archive file
@comment TROFF INPUT: .I package-x.y.z.tar.gz
@i{package-x.y.z.tar.gz}
unbundles into a directory named
@comment TROFF INPUT: .I package-x.y.z
@i{package-x.y.z}
in which there is an optional
@comment TROFF INPUT: .BR configure (1)
@b{configure}@r{(1)}
script, and a
@comment TROFF INPUT: .IR Makefile .
@i{Makefile}@r{.}
Running
@comment TROFF INPUT: .BR make (1)
@b{make}@r{(1)}
in that directory should build the package, and
@comment TROFF INPUT: .B "make check"
@b{make check}
(overridable with the
@comment TROFF INPUT: .BI \-\-check " target(s)"
@b{@minus{}@minus{}check}@i{ target(s)}
option) should run validation tests.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .B build-all
@b{build-all}
recognizes archives in these formats:
@comment TROFF INPUT: .IR .jar ,
@i{.jar}@r{,}
@comment TROFF INPUT: .IR .tar ,
@i{.tar}@r{,}
@comment TROFF INPUT: .IR .tar.bz2 ,
@i{.tar.bz2}@r{,}
@comment TROFF INPUT: .IR .tar.gz ,
@i{.tar.gz}@r{,}
@comment TROFF INPUT: .IR .tar.Z ,
@i{.tar.Z}@r{,}
and
@comment TROFF INPUT: .IR .zip .
@i{.zip}@r{.}
It is the user's responsibility to ensure with suitable
shell startup files that on each remote host, GNU
@comment TROFF INPUT: .BR tar (1)
@b{tar}@r{(1)}
and
@comment TROFF INPUT: .BR unzip (1)
@b{unzip}@r{(1)}
are found first in the search path, since they are needed to
unbundle packages.
@comment TROFF INPUT: .PP

Installation after builds is
@comment TROFF INPUT: .I not
@i{not}
automated; it is imperative to examine the build logs before
deciding whether it is safe to issue
@comment TROFF INPUT: .B "make install"
@b{make install}
in a remote build directory.
@comment  ========================================================
@comment TROFF INPUT: .SH "FILES"

@node FILES

@section FILES
@c DEBUG: print_menu("FILES")

In this section,
@comment TROFF INPUT: .I $REMOTEHOME
@i{$REMOTEHOME}
refers to the home directory on a remote build host.
@comment TROFF INPUT: .PP

Comments are supported in all of these files: they run from
sharp (#) to end of line.
@comment TROFF INPUT: .PP

@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP  \w'\fI$REMOTEHOME/.build/begin\fP'u+1n
@comment TROFF INPUT: .I $REMOTEHOME/.build/begin

@c ---------------------------------------------------------------------
@table @code
@item @i{$REMOTEHOME/.build/begin}
Commands to be executed in the context of the login shell on
the remote host before the build begins.  This file can be
used to augment the search path,
@comment TROFF INPUT: .IR PATH ,
@i{PATH}@r{,}
for shells like
@comment TROFF INPUT: .BR ksh (1)
@b{ksh}@r{(1)}
and
@comment TROFF INPUT: .BR sh (1)
@b{sh}@r{(1)}
that do not provide for startup files for other than login
sessions.  Any output produced will be recorded near the
start of the build log file.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .I $HOME/.build/directories

@item @i{$HOME/.build/directories}
The list of local directories to search for package archive
files.  If that file cannot be found, a default list of
source directories is provided.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .I $REMOTEHOME/.build/end

@item @i{$REMOTEHOME/.build/end}
Commands to be executed in the context of the login shell on
the remote host after the build ends.  Any output produced
will be recorded near the end of the build log file.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .I $HOME/.build/userhosts

@item @i{$HOME/.build/userhosts}
The default list of build hosts, with entries like this:
@comment TROFF INPUT: .IP

@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{jones@@example.com:/local/build,$HOME/.build/c99}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .IP

The username, build directory, and environment file are
optional.  Except for the remote build directory, all files
listed are on the initiating host.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .I envfile

@item @i{envfile}
Environment files contain settings of environment variables
for
@comment TROFF INPUT: .BR configure (1)
@b{configure}@r{(1)}
on the remote systems.  Filenames are arbitrary: they are
set in entries in the
@comment TROFF INPUT: .I $HOME/.build/userhosts
@i{$HOME/.build/userhosts}
file or similar files specified by the
@comment TROFF INPUT: .B \-\-userhosts
@b{@minus{}@minus{}userhosts}
option, or else in command-line
@comment TROFF INPUT: .B \-\-on
@b{@minus{}@minus{}on}
options. For example, an environment file with
@comment TROFF INPUT: .IP

@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
CC=c99
CFLAGS="-O3 -D@t{_}POSIX@t{_}SOURCE"
CXX=CC
CXXFLAGS="-O3 -D@t{_}POSIX@t{_}SOURCE"
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .IP

specifies the C and C++ compilers, and compiler optimization
flags, to be used for the build.
@comment  ========================================================
@comment TROFF INPUT: .SH "EXAMPLES"

@end table

@c ---------------------------------------------------------------------

@node EXAMPLES

@section EXAMPLES
@c DEBUG: print_menu("EXAMPLES")

Build two packages everywhere:
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{build-all coreutils-5.0.0 gawk-3.1.2}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
Build package on a specific host:
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{build-all --on loaner.example.com gnupg-1.2.1}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
Build package from nonstandard location:
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{build-all --source $HOME/work butter-0.3.7}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
Build package in POSIX compilation environment:
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{build-all --userhosts posixhosts numlib-3.2.1}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
@comment  ========================================================
@comment TROFF INPUT: .SH "SEE ALSO"

@node SEE ALSO

@section SEE ALSO
@c DEBUG: print_menu("SEE ALSO")

@comment TROFF INPUT: .BR autoconf (1),
@b{autoconf}@r{(1),}
@comment TROFF INPUT: .BR autoheader (1),
@b{autoheader}@r{(1),}
@comment TROFF INPUT: .BR automake (1),
@b{automake}@r{(1),}
@comment TROFF INPUT: .BR configure (1),
@b{configure}@r{(1),}
@comment TROFF INPUT: .BR jar (1),
@b{jar}@r{(1),}
@comment TROFF INPUT: .BR ksh (1),
@b{ksh}@r{(1),}
@comment TROFF INPUT: .BR make (1),
@b{make}@r{(1),}
@comment TROFF INPUT: .BR scp (1),
@b{scp}@r{(1),}
@comment TROFF INPUT: .BR sh (1),
@b{sh}@r{(1),}
@comment TROFF INPUT: .BR ssh (1),
@b{ssh}@r{(1),}
@comment TROFF INPUT: .BR tar (1),
@b{tar}@r{(1),}
@comment TROFF INPUT: .BR unzip (1).
@b{unzip}@r{(1).}
@comment  ========================================================
@bye
