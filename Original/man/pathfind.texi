\input texinfo   @c -*-texinfo-*-
@setfilename pathfind.info

@comment ===============================================================
@comment WARNING: Do NOT edit this file.  It was produced automatically
@comment by man2info on Fri Jul 11 06:27:03 MDT 2003
@comment for beebe@psi.math.utah.edu
@comment from pathfind.man
@comment in /u/sy/beebe/xml/shbook/man
@comment ===============================================================

@comment @documentencoding ISO-8859-1

@comment troff -man typesetting style: headers, footers, no paragraph indentation

@paragraphindent none

@iftex
@parskip = 0.5@normalbaselineskip plus 3pt minus 1pt
@end iftex

@set lq ``
@set rq ''

@comment  ========================================================
@comment TROFF INPUT: .TH PATHFIND 1 "" "1.00"

@headings off
@everyheading PATHFIND(1) @| @| PATHFIND(1)
@everyfooting  @| @thispage @| 1.00

@node Top

@chapter PATHFIND 1 "" "1.00
@c DEBUG: print_menu("Top")

@ifnottex
@menu
* NAME::
* SYNOPSIS::
* OPTIONS::
* DESCRIPTION::
* SEE ALSO::

@end menu
@end ifnottex


@comment  ========================================================
@comment TROFF INPUT: .SH NAME

@node NAME

@section NAME
@c DEBUG: print_menu("NAME")

pathfind @r{---} find files in a directory path
@comment  ========================================================
@comment TROFF INPUT: .SH SYNOPSIS

@node SYNOPSIS

@section SYNOPSIS
@c DEBUG: print_menu("SYNOPSIS")

@comment TROFF INPUT: .B pathfind
@b{pathfind}
[
@comment TROFF INPUT: .B \-\-all
@b{@minus{}@minus{}all}
] [
@comment TROFF INPUT: .B \-\-?
@b{@minus{}@minus{}?}
] [
@comment TROFF INPUT: .B \-\-help
@b{@minus{}@minus{}help}
] [
@comment TROFF INPUT: .B \-\-version
@b{@minus{}@minus{}version}
]
@comment TROFF INPUT: .if n .ti +9n
@comment .if n .ti +9n
@comment  .if t .ti +\w'\fBpathfind\fP\ 'u
envvar [ file(s) ]
@comment  ========================================================
@comment TROFF INPUT: .SH OPTIONS

@node OPTIONS

@section OPTIONS
@c DEBUG: print_menu("OPTIONS")

@comment TROFF INPUT: .B pathfind
@b{pathfind}
options can be prefixed with either one or two hyphens, and
can be abbreviated to any unique prefix.  Thus,
@comment TROFF INPUT: .BR \-v ,
@b{@minus{}v}@r{,}
@comment TROFF INPUT: .BR \-ver ,
@b{@minus{}ver}@r{,}
and
@comment TROFF INPUT: .B \-\-version
@b{@minus{}@minus{}version}
are equivalent.
@comment TROFF INPUT: .PP

To avoid confusion with options, if a filename begins with a
hyphen, it must be disguised by a leading absolute or
relative directory path, e.g.,
@comment TROFF INPUT: .I /tmp/-foo
@i{/tmp/-foo}
or
@comment TROFF INPUT: .IR ./-foo .
@i{./-foo}@r{.}
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP \w'\fB\-version\fP'u+3n
@comment TROFF INPUT: .B \-all

@c ---------------------------------------------------------------------
@table @code
@item @b{@minus{}all}
Search all directories for each specified file, instead of
reporting just the first instance of each found in the
search path.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-?

@item @b{@minus{}?}
Same as
@comment TROFF INPUT: .BR \-help .
@b{@minus{}help}@r{.}
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-help

@item @b{@minus{}help}
Display a brief help message on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
giving a usage description, and then terminate immediately
with a success return code.
@comment  --------------------------------------------------------
@comment TROFF INPUT: .TP
@comment TROFF INPUT: .B \-version

@item @b{@minus{}version}
Display the program version number and release date on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
and then terminate immediately with a success return code.
@comment  ========================================================
@comment TROFF INPUT: .SH DESCRIPTION

@end table

@c ---------------------------------------------------------------------

@node DESCRIPTION

@section DESCRIPTION
@c DEBUG: print_menu("DESCRIPTION")

@comment TROFF INPUT: .B pathfind
@b{pathfind}
searches a colon-separated directory search path defined by
the value of the environment variable, @i{envvar}, for
specified files, reporting their full path on
@comment TROFF INPUT: .IR stdout ,
@i{stdout}@r{,}
or complaining @i{filename: not found} on
@comment TROFF INPUT: .I stderr
@i{stderr}
if a file cannot be found anywhere in the search path.
@comment TROFF INPUT: .PP

@comment TROFF INPUT: .BR pathfind 's
@b{pathfind}@r{'s}
exit status is 0 on success, and otherwise is the number of
files that could not be found, possibly capped at the
exit code limit of 125.
@comment TROFF INPUT: .PP

For example,
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{pathfind PATH ls}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
reports
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{/bin/ls}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
on most Unix systems, and
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{pathfind --all PATH gcc g++}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
reports
@comment TROFF INPUT: .RS

@c ---------------------------------------------------------------------
@quotation
@comment TROFF INPUT: .nf

@c ---------------------------------------------------------------------
@display
@t{/usr/local/bin/gcc
/usr/bin/gcc
/usr/local/gnat/bin/gcc
/usr/local/bin/g++
/usr/bin/g++}
@comment TROFF INPUT: .fi

@end display

@c ---------------------------------------------------------------------
@comment TROFF INPUT: .RE

@end quotation

@c ---------------------------------------------------------------------
on some systems.
@comment  ========================================================
@comment TROFF INPUT: .SH "SEE ALSO"

@node SEE ALSO

@section SEE ALSO
@c DEBUG: print_menu("SEE ALSO")

@comment TROFF INPUT: .BR find (1),
@b{find}@r{(1),}
@comment TROFF INPUT: .BR locate (1),
@b{locate}@r{(1),}
@comment TROFF INPUT: .BR slocate (1),
@b{slocate}@r{(1),}
@comment TROFF INPUT: .BR type (1),
@b{type}@r{(1),}
@comment TROFF INPUT: .BR whence (1),
@b{whence}@r{(1),}
@comment TROFF INPUT: .BR where (1),
@b{where}@r{(1),}
@comment TROFF INPUT: .BR whereis (1).
@b{whereis}@r{(1).}
@comment  ========================================================
@bye
